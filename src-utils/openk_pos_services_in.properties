# OpenK POS Configuration file for services / license.
# Este ficheiro contem as especificacoes que permitem controlar os servicos acordados com o cliente
#
# Este ficheiro deve ser cifrado com base nos seguintes dados oriundos do ficheiro normal de propriedades
# <NIF do cliente><Designacao do Cliente> 
#
# (1)NIF do cliente=
# (2)Designacao do Cliente=
# (3)Morada do Cliente=
# (4)Codigo postal do cliente=
# (5)Localidade do cliente=
# <os valores anteriores devem ser a designacao a usar em todos os taloes e relatorios>
#
# (6)mac address= <pode-se deixar vazio para nao limitar por macaddress>
# (7)data_limite= <deve-se colocar sempre uma dada limite>
# (8)recibos=standard; restaurant; simple
# (9)modo da aplicacao=demonstracao, licenciada   -> faz aparecer nos recibos a indicacao que e' uma demonstracao
# 

# Para demonstracoes
# 1=999999999
# 2=Empresa Demonstracao Lda
# 3=Rua do Cliente de Demonstracao
# 4=9999-999
# 5=Cidade de Demonstracao
# Para o KTC II
1=508963281
2=KTC II Ensino Lda
3=Rua EN 327 n1315
4=4520-706
5=Souto - Santa Maria da Feira
# 5855CAF8BC41 mac address do mac osx
# 6=5855CAF8BC41
6=
# A data deve ser no formato: yyyy-mm-dd hh:mm:ss
7=2013-12-30 20:48:00
# receipt_mode=standard; restaurant; simple;  -> ESTA PROPRIEDADE NAO E USADA - VER MAIS ABAIXO
8=standard
# 9 = application_mode=demonstracao....;
9=demonstracao
# db.name=nova_bd
# 10=dayana
# 10=nova_bd
10=openkpos_1_20_ktc2
# db.user=postgres
11=postgres
# db.password=crypt:7BD69DBB4D7A4200D99CF6F602A68F84
12=crypt:7BD69DBB4D7A4200D99CF6F602A68F84
# db.URL=jdbc:hsqldb:file:nova_bd;ifexists=true;crypt_lobs=true;crypt_key=537c3950a35a7b733a22f48f01a0e79a;crypt_type=blowfish
# 13=jdbc:postgresql://localhost:5432/dayana
13=jdbc:postgresql://localhost:5432/openkpos_1_20_ktc2
# 13=jdbc:hsqldb:file:nova_bd;ifexists=true;crypt_lobs=true;crypt_key=537c3950a35a7b733a22f48f01a0e79a;crypt_type=blowfish
# db.driverLib=hsqldb.jar
14=postgresql-jdbc3-8.2.jar
# 14=hsqldb.jar
# db.driver=org.hsqldb.jdbc.JDBCDriver
15=org.postgresql.Driver
# 15=org.hsqldb.jdbc.JDBCDriver
# hsqldb.cryptkey
16=537c3950a35a7b733a22f48f01a0e79a
# crypt.type=blowfish
17=blowfish

# 18: Se true so pode existir uma instancia no computador
# machine.uniqueinstance=true
18=true
# 19: Balanca. Opcoes: screen; dialog1; samsungesp
# machine.scale=screen
19=screen
# 20: O Scanner de codigo de barras. Por defeito os scanners simulam o teclado pelo que nao se deve configurar nada. Opcoes: scanpal2
# machine.scanner=Not defined
20=Not defined
# 21: machine.ticketsbag=standard; restaurant; simple
# machine.ticketsbag=restaurant
# 21=restaurant
21=standard
# 21=simple
# 22: Opcoes: fullscreen, window
# machine.screenmode=window
22=window
# 23: O nome do posto
# machine.hostname=openkpos
23=openkpos
# 24: machine.display: configura o display do cliente
# Opcoes: screen; window; epson; surepos; ld200; javapos
# machine.display=epson\:file,COM7:
# machine.display=screen
24=screen
# 25: Para configurar a impressora normal de relatorios
# machine.printername=(Default)
25=(Default)
# 26: exemplo de impressora termica USB: machine.printer=tmu220\:file,/dev/usblp0
# exemplo de impressora termica USB: machine.printer=epson\:file,/dev/usblp0
# impressora termica paralelo no windows: machine.printer=epson\:file,LPT3
# impressora termica serie (COM1) no linux: machine.printer=epson\:file,/dev/ttyS0
# opcoes de machine.printer: screen; printer (para usar um driver do sistema operativo); epson; tmu220; star; ithaca; surepos; plain; javapos
# machine.printer=screen
26=screen
# 27
# machine.printer.2=screen
27=screen
# 28
# machine.printer.3=screen
28=screen



