//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.

report = new com.openbravo.pos.reports.PanelReportBean();

report.setTitleKey("Menu.ReportSalesAndTaxes");
report.setReport("/pt/ktc/openk/pos/reports/sales_and_taxes");
report.setResourceBundle("pt/ktc/openk/pos/reports/sales_and_taxes_messages");

// Nota que o seguinte select nunca retorna 'consultas de mesa'(tickettype=3) pois estas nao geram taxlines!!!!
// O select anterior podia, por vezes, devolver documentos que não tinham taxlines calculadas e registadas (por alguma razão ainda não encontrada).
// Este select corrige a situação.

report.setSentence(
"SELECT TICKETS.TICKETTYPE AS TIPO, CASE TICKETS.TICKETTYPE "+ 
"WHEN 0 THEN 'Faturas Simplificadas' "+
"WHEN 1 THEN 'Notas de Credito/Devolucoes' "+ 
"WHEN 4 THEN 'Faturas' END AS DOCUMENTO, "+
" TAXCATEGORIES.NAME AS IMPOSTO, "+
"sum(Ticketlines.price*ticketlines.units) AS TOTAL_SEM_IMPOSTOS,  "+
"sum(Ticketlines.price*ticketlines.units*taxes.rate) AS TOTAL_IMPOSTOS, "+
"sum(Ticketlines.price*ticketlines.units)+sum(Ticketlines.price*ticketlines.units*taxes.rate) AS TOTAL_PVP "+
"FROM RECEIPTS, TICKETS, TicketLINES, TAXES, TAXCATEGORIES "+
"WHERE RECEIPTS.ID = TICKETS.ID "+ 
"  AND tickets.ID = TicketLINES.ticket AND ticketLINES.TAXID = TAXES.ID AND TAXES.CATEGORY = TAXCATEGORIES.ID "+
"  AND ?(QBF_FILTER) "+ 
" and (TICKETS.TICKETTYPE=0 or TICKETS.TICKETTYPE=1 or TICKETS.TICKETTYPE=4) "+
" GROUP BY TICKETS.TICKETTYPE, TAXCATEGORIES.NAME "+
" ORDER BY TICKETS.TICKETTYPE, TAXCATEGORIES.NAME ");
                 
report.addParameter("RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.DATENEW");
report.addQBFFilter(new com.openbravo.pos.reports.JParamsDatesInterval());

report.addField("TIPO", com.openbravo.data.loader.Datas.STRING);
report.addField("DOCUMENTO", com.openbravo.data.loader.Datas.STRING);
report.addField("IMPOSTO", com.openbravo.data.loader.Datas.STRING);
report.addField("TOTALSEMIMPOSTOS", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("TOTALIMPOSTOS", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("TOTALPVP", com.openbravo.data.loader.Datas.DOUBLE);

report;
